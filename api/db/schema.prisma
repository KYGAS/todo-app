datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

// Define your own datamodels here and run `yarn redwood prisma migrate dev`
// to create migrations for them and apply to your dev DB.
// TODO: Please remove the following example:

model UserOnOrganisation {
  id              Int          @id @default(autoincrement())
  user            User         @relation(fields: [user_id], references: [id])
  user_id         Int
  organisation    Organisation @relation(fields: [organisation_id], references: [id])
  organisation_id Int
}

model OrganisationOnProject {
  id              Int          @id @default(autoincrement())
  organisation    Organisation @relation(fields: [organisation_id], references: [id])
  organisation_id Int
  project         Project      @relation(fields: [project_id], references: [id])
  project_id      Int
}

model ProjectOnTask {
  id         Int     @id @default(autoincrement())
  project    Project @relation(fields: [project_id], references: [id])
  project_id Int
  task       Task    @relation(fields: [task_id], references: [id])
  task_id    Int
}

model TaskOnMessage {
  id         Int     @id @default(autoincrement())
  task       Task    @relation(fields: [task_id], references: [id])
  task_id    Int
  message    Message @relation(fields: [message_id], references: [id])
  message_id Int
}

model User {
  id                  Int                  @id @default(autoincrement())
  username            String               @unique
  email               String               @unique
  fName               String
  lName               String
  hashedPassword      String
  salt                String
  resetToken          String?
  resetTokenExpiresAt DateTime?
  User_Organisation   UserOnOrganisation[]
}

model Organisation {
  id                   Int                     @id @default(autoincrement())
  name                 String
  owner_id             Int
  User_Organisation    UserOnOrganisation[]
  Organisation_Project OrganisationOnProject[]
}

model Project {
  id                   Int                     @id @default(autoincrement())
  name                 String
  Organisation_Project OrganisationOnProject[]
  Project_Task         ProjectOnTask[]
}

model Task {
  id                    Int             @id @default(autoincrement())
  name                  String
  status                String
  responsible_person_id Int
  Project_Task          ProjectOnTask[]
  Task_Message          TaskOnMessage[]
}

model Message {
  id           Int             @id @default(autoincrement())
  creator_id   Int
  message      String
  Task_Message TaskOnMessage[]
}
